
def sov(zz_ch, d_us):
    zn = {
        # начало с овна!!!!
        # Порядок: овенБ телец, близнецы, рак, лев, дев, весы, скорпион, стрелец, козерог, водолуй, рыбы!!!
        "Козерог": [82, 86, 71, 82, 83, 85, 81, 100, 93, 84, 82, 67],
        "Водолей": [100, 82, 93, 66, 92, 67, 100, 89, 100, 92, 77, 100],
        "Рыбы": [85, 82, 81, 83, 95, 100, 100, 100, 74, 93, 93, 100],
        "Овен": [91, 81, 72, 81, 100, 84, 83, 100, 92, 82, 82, 87],
        "Телец": [72, 100, 73, 83, 100, 92, 92, 100, 81, 100, 83, 91],
        "Близнецы": [83, 73, 84, 100, 81, 93, 89, 93, 100, 82, 93, 82],
        "Рак": [91, 93, 77, 83, 82, 84, 94, 91, 82, 96, 84, 100],
        "Лев": [100, 91, 68, 71, 100, 86, 91, 100, 100, 92, 97, 83],
        "Дева": [71, 69, 75, 81, 73, 75, 74, 98, 72, 61, 72, 67],
        "Весы": [100, 100, 100, 78, 100, 85, 91, 100, 100, 92, 100, 81],
        "Скорпион": [100, 100, 91, 91, 92, 91, 100, 100, 92, 100, 88, 97],
        "Стрелец": [84, 72, 100, 71, 100, 82, 92, 100, 100, 79, 100, 71]
    }
    return zn[zz_ch][check_z(d_us, n=True)]


def check_z(z, n=False):
    from datetime import datetime
    import bisect
    tdays = [19, 49, 80, 110, 141, 173, 204,
             235, 256, 296, 327, 356, 366]
    zod = ["Козерог", "Водолей", "Рыбы", "Овен",
           "Телец", "Близнецы", "Рак", "Лев",
           "Дева", "Весы", "Скорпион",
           "Стрелец", "Козерог"]
    if z == None:
        d, m, g = 10, 10, 10
    else:
        d, m, g = map(int, str(z).split("."))
    if n:
        return (zod.index(check_z(z)))
    return (zod[bisect.bisect_left(tdays, (datetime(2020, m, d) - datetime(2019, 12, 31)).days)])

